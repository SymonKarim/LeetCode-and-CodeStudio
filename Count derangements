#include<bits/stdc++.h>
const int mod = 1000000000+7;
long long int solve(int n,vector<long long int>&dp){
    if(dp[n]!=-1) return dp[n];
    if(n==1) return 0;
     if(n==2) return 1;
    dp[n] = ((n-1)%mod)*((solve(n-2,dp)%mod)+ (solve(n-1,dp)%mod))%mod;
    return dp[n];

}
long long int solveTabular(int n,vector<long long int>&dp){
    dp[1] = 0; dp[2] =1;
    for(int i=3;i<=n;i++){
        dp[i] = ((i-1)%mod*(dp[i-1]+dp[i-2])%mod)%mod;
    }
    return dp[n];
}
long long int countDerangements(int n) {
    vector<long long int>dp(n+5,-1);
    return solveTabular(n,dp);
}
